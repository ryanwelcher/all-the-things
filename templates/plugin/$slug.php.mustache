<?php
/**
 * Plugin Name:       {{title}}
{{#pluginURI}}
 * Plugin URI:        {{{pluginURI}}}
{{/pluginURI}}
{{#description}}
 * Description:       {{description}}
{{/description}}
 * Requires at least: 6.1
 * Requires PHP:      7.0
 * Version:           {{version}}
{{#author}}
 * Author:            {{author}}
{{/author}}
{{#license}}
 * License:           {{license}}
{{/license}}
{{#licenseURI}}
 * License URI:       {{{licenseURI}}}
{{/licenseURI}}
 * Text Domain:       {{textdomain}}
{{#domainPath}}
 * Domain Path:       {{{domainPath}}}
{{/domainPath}}
{{#updateURI}}
 * Update URI:        {{{updateURI}}}
{{/updateURI}}
 *
 * @package           {{namespace}}
 */
{{^isPluginVariant}}
/**
 * Registers the block using the metadata loaded from the `block.json` file.
 * Behind the scenes, it registers also all assets so they can be enqueued
 * through the block editor in the corresponding context.
 *
 * @see https://developer.wordpress.org/reference/functions/register_block_type/
 */
function {{namespaceSnakeCase}}_{{slugSnakeCase}}_block_init() {
	register_block_type( __DIR__ . '/build' );
}
add_action( 'init', '{{namespaceSnakeCase}}_{{slugSnakeCase}}_block_init' );
{{/isPluginVariant}}
{{#isPluginVariant}}
add_action(
	'enqueue_block_editor_assets',
	function() {
		${{slugSnakeCase}}_file = plugin_dir_path( __FILE__ ) . '/build/{{slug}}.asset.php';

		if ( file_exists( ${{slugSnakeCase}}_file ) ) {
			$assets = include ${{slugSnakeCase}}_file;
			wp_enqueue_script(
				'{{slug}}',
				plugin_dir_url( __FILE__ ) . '/build/{{slug}}.js',
				$assets['dependencies'],
				$assets['version'],
				true
			);
		}
	}
);


{{/isPluginVariant}}
